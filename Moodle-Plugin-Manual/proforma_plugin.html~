<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">

  <style>
    /*
        body {background-color: powderblue;}
        h1   {color: blue;}
        p    {color: red;} 
        */

    body {
      counter-reset: h2counter;
    }

    h1 {
      counter-reset: h2counter;
    }

    h2 {
      counter-reset: h3counter;
    }

    h3 {
      counter-reset: h4counter;
    }

    h2:before {
      content: counter(h2counter) ".\0000a0\0000a0";
      counter-increment: h2counter;
    }

    h3:before {
      content: counter(h2counter) "."counter(h3counter) ".\0000a0\0000a0";
      counter-increment: h3counter;
    }

    h4:before {
      content: counter(h2counter) "."counter(h3counter) "."counter(h4counter) ".\0000a0\0000a0";
      counter-increment: h4counter;
    }

    table,
    th,
    td {
      border: 1px solid black;
    }

    th,
    td {
      padding: 5px;
    }

    /*td>ol { padding: 15px }*/
  </style>

</head>

<body>
  <h1>ProFormA-Plugin für Moodle (aus Sicht des Lehrenden)</h1>

  <p>
    Das ProFormA-Plugin für Moodle bietet die Möglichkeit, Programmieraufgaben in Moodle automatisiert zu bewerten.
    Eingereichte Lösungen werden dabei gegen eine Testsuite laufen gelassen. Aus den Ergebnissen des Testlaufs wird dann
    anhand zuvor festgelegter Kriterien automatisch die Bewertung ermittelt. Die Tests laufen auf einem externen System
    (Praktomat) jeweils in einer gesicherten Umgebung (Sandbox).

  </p>

  Es wird im Weiteren vorausgesetzt, dass der Umgang mit der Fragensammlung und den Tests in Moodle vertraut ist.

  <p>
    Die gesamten Arbeiten entstanden im Rahmen des
    <a href="http://www.ecult.me/was-bietet-ecult/proforma/">eCULT-ProFormA-Projekts</a>.
  </p>

  <h2>Übersicht</h2>

  <p>
    Der ProFormA-Standard, der Namensgeber des Moodle-Plugins war, definiert eine Programmieraufgabe als XML-Datei, die
    alle notwendigen Informationen zur Aufgabe im
    <a href="https://github.com/ProFormA/taskxml/blob/master/whitepaper.md">ProFormA-Aufgabenformat</a> enthält.

    Dies ist neben der Aufgabenbeschreibung vor allem die Testsuite,
    die vom Praktomat zur Bewertung der Einreichung durchlaufen wird.
    Das eigentliche Format ist für die Anwender (Lehrende und Studierende) irrelevant, so dass sie sich damit nicht
    beschäftigen müssen.
  </p>

  <p>
    ProFormA-Aufgaben können direkt in Moodle oder aber extern erzeugt und anschließend in Moodle importiert werden.
    In Moodle besteht allerdings lediglich die Möglichkeit, einfache Java-Aufgaben zu erstellen.
    Für andere Programmiersprachen und komplexere Java-Aufgaben kann der <a
      href="https://media.elan-ev.de/proforma/editor/releases.html">ProFormA-Aufgaben-Editor</a> genutzt werden.

  </p>

  <p>
    Egal, wie eine Aufgabe erstellt wurde, Moodle speichert intern die ProFormA-XML-Datei ab und sendet diese im Rahmen
    einer studentischen Einreichung zum Praktomat.


  </p>

  <p>
    <img src="erstellen.png" alt="Erstellen">
  </p>


  Derzeit unterstützt das System folgende Programmiersprachen mit folgenden Test-Frameworks:

  <ul>
    <li> Java: JUnit, Checkstyle
    <li> Python: DocTest
    <li> SetlX: Setlx-Test
  </ul>

  </p>

  <p>
    Für die Testsuite werden gängige Standards genutzt.

    Im Fall von Java sind dies JUnit und CheckStyle.
    Dies hat den Vorteil, dass für die automatisierte Bewertung betriebsbewährte Software zum Einsatz kommt.
    Zudem bleibt der Einarbeitungsaufwand für die Autoren überschaubar, da sie mit den Standards vertraut sind und meist
    existiert eine Vielzahl von Werkzeugen,
    die beim Erstellen der Tests genutzt werden können (z.B. IDE).
  </p>



  <p>
    Das ProFormA-Plugin unterstützt den Einsatz der ProFormA-Fragen im Rahmen von Moodle-Tests.
    Ein Test kann natürlich neben ProFormA-Aufgaben auch noch andere
    Aufgabentypen enthalten, so dass man die Tests abwechslungsreicher gestalten kann.
    Außerdem kann man Tests mit nur einer (eher umfangreichen) Aufgabe erzeugen oder aus mehreren (kleineren)
    Aufgaben zusammensetzen.
  </p>
  <p>
    Bei größeren Aufgaben empfiehlt es sich tatsächlich, diese in mehrere kleinere Teilaufgaben aufteilen.
    Dies bietet den Vorteil, dass die Studierenden, die Aufgabe in kleineren Einheiten abarbeiten können und
    die Kriterien für die Bewertung detailierter festgelegt werden können.
  </p>
  <p>

    Letztlich lassen sich ProFormA-Aufgaben sehr vielfältig sowohl für Anfängeraufgaben als auch für komplexe Laborübungen einsetzen.
  </p>


  <h2>Erzeugen einer ProFormA-Aufgabe in Moodle</h2>

  Wie bereits erwähnt, gibt es zwei Wege, eine Aufgabe in Moodle anzulegen:

  <ol type="A">
    <li> Direktes Erstellen im in Moodle eingebauten Editor (nur einfache Java-Aufgaben möglich)</li>
    <li> Erstellen mit dem externen <a
        href="https://media.elan-ev.de/proforma/editor/releases.html">ProFormA-Aufgaben-Editor</a> und anschließender
      Import</li>
  </ol>
  <p>

    Den prinzipiellen Ablauf beschreibt die folgende Tabelle:

  <table>
    <tr>
      <th>Vorgang</th>
      <th>Umgebung</th>
      <th>A. Frage in Moodle erstellen</th>
      <th>B. Frage extern erstellen und importieren</th>
    </tr>
    <tr>
      <td>Voraussetzungen schaffen</td>
      <td>extern (z.B. Eclipse)</td>
      <td colspan="2"><a href="#Voraussetzungen">Musterlösung und Testsuite erstellen</a> </td>
    </tr>
    <tr>
      <td></td>
      <td><a href="https://media.elan-ev.de/proforma/editor/releases.html">ProFormA-Aufgaben-Editor</a></td>
      <td></td>
      <td>
        <ol>
          <li> die Aufgabe zusammenstellen<br>
            (Hochladen der Testsuite und der Musterlösung, Eingabe der Aufgabenstellung...)
          <li> Download der ProFormA-Datei</li>
        </ol>

      </td>
    </tr>
    <tr>
      <td>Frage in Fragesammlung erstellen</td>
      <td>Moodle</td>

      <td>
        <ol>
          <li>Fragensammlung des Kurses öffnen, in dem die Frage genutzt werden soll</li>
          <li>
            Frage direkt in Moodle erstellen (über 'Neue Frage erstellen...')

          </li>
        </ol>
      </td>
      <td>
        <ol>
          <li>Fragensammlung des Kurses öffnen, in dem die Frage genutzt werden soll</li>

          <li> <a href="#Aufgabe_importieren">Import der ProFormA-Datei</a>
          <li>ggf. <a href="#Aufgabe_einstellen">Ändern von Einstellungen der Aufgabe</a></li>

        </ol>
      </td>
    </tr>
    <tr>
      <td>Frage in Test nutzen</td>
      <td>Moodle</td>
      <td colspan="2">
        <ol>
          <li><a href="#Test_anlegen">Anlegen eines Tests</a></li>
          <li><a href="#Test_einstellen">Einstellungen anpassen!</a></li>
          <li> <a href="#Aufgabe_nutzen">Einfügen der Aufgabe(n) in den Test</a></li>
        </ol>
      </td>
    </tr>
  </table>


  <p>
    Das Anlegen des Tests in Moodle kann auch erfolgen, bevor die Frage erstellt wird.
    Einstellungen von Aufgaben und Tests können auch später noch verändert werden.

  </p>
  <p>
    Einige Besonderheiten werden im Nachfolgenden erläutert.

  </p>


  <h3 id="Voraussetzungen">Voraussetzungen</h3>

  Nachdem in etwa klar ist, wie die Aufgabe aussehen soll, erstellt man
  <ul>
    <li> eine Musterlösung und</li>
    <li> eine Testsuite in einem der unterstützten Frameworks (JUnit für Java).</li>
  </ul>
  </p>

  Die Musterlösung ist nicht zwingend erforderlich. Sie ist aber hilfreich, da sie das Überprüfen des Bewertungsablaufs
  der Aufgabe ermöglicht.
  Die Testfälle sollten mit der Musterlösung fehlerfrei durchlaufen.
  Die vorgenannten Dateien können am besten in einer geeigneten Entwicklungsumgebung (IDE) erstellt und ausgetestet
  werden.


  <h3>Ansatz A: Erstellen in Moodle</h3>

Einfache Java-Aufgaben lassen sich in Moodle direkt eingeben. Die Einschränkung bezieht sich hier vor allem auf die Anzahl der genutzten Testdateien.
Je JUnit-Test kann nämlich nur eine Datei eingebenen werden. Außerdem kann auch nur ein Checkstyle-Test mit ebenfalls nur einer Datei hinzugefügt werden.

<p>
  Weitere Informationen zu den Einstellungen finden sich weiter <a href="#Aufgabe_einstellen">unten</a>.
</p>
  <h3 id="Aufgabe_importieren">Ansatz B: Importieren einer ProFormA-Aufgabe</h4>

    <p>

      Dazu ruft man die Importfunktion der Fragensammlung auf und wählt das ProFormA-Format.
      Die ProFormA-Datei muss ausgewählt oder in die Drop-Zone gezogen werden.
      Danach wird der Import gestartet.


    </p>
    Während des Imports werden verschiedene Daten der ProFormA-Datei ausgelesen und in ein Frage-Objekt von Moodle
    übernommen (z.B. Aufgabenbeschreibung).
    Es handelt sich dabei i.W. um Angaben, die vom Praktomat nicht verwendet werden (z.B. die Aufgabenbeschreibung).
    Diese Werte können in Moodle beliebig geändert werden.

    <p>
      <img src="import_auswahl.png" alt="Import">
    </p>
    <h3 id="Aufgabe_einstellen">Aufgabeneinstellungen</h3>



    <p>
      In Moodle lassen sich verschiedene Daten einer Aufgabe einstellen. Dabei handelt es sich
    <ol>
      <li>hauptsächlich um <a href="#Aufgabebeschreibung">Angaben, die die Anzeige für den Studierenden betreffen</a>
        (z.B. Aufgabenbeschreibung, Codeschablone), </li>
      <li><a href="#Einreichung">Form der Einreichung</a> (Editor, Datei-Upload, Export aus Versionsverwaltung) sowie
      </li>
      <li>
        Einstellungen zur <a href="#Bewertung">Bewertung</a>  (maximal erreichbaren Punkte, Punktabzug
        beim Frageverhalten 'Mehrfachbeantwortung (mit Abzügen) oder Gewichte).
      </li>

    </ol>


    </p>
    <h4 id="Aufgabebeschreibung">Aufgabebeschreibung</h4>

    Die Angaben, die dem Studierenden angezeigt werden, sollten im Wesentlichen selbsterklärend sein. Dazu gehört die
    Aufgabenbeschreibung oder Dateien, die der Studierende herunterladen kann.
    Dabei kann es sich um weitere Erläuterungen zur Aufgabe z.B. in Form einer pdf-Datei handeln oder auch um
    Code-Bibliotheken oder Eingabedateien.

    <h4 id="Einreichung">Form der Einreichung</h4>

    <p>
      Es werden folgende Eingabeformen unterstützt:

    <ol>
      <li>Editor mit Codevorgabe und Syntax-Highlighting</li>
      <li>Datei-Upload (Filepicker) </li>
      <li> Versionskontrollsystem SVN </li>
    </ol>
    </p>
    Filepicker: Die akzeptierten Dateitypen können als Endung mit vorangestelltem Punkt (.java) oder als Mimetype angegeben werden.
    </p>
  </p>
  Versionskontrollsystem: Dies wird i.allg. mit Gruppen genutzt. Dazu müssen die Kursteilnehmer vorab in Gruppen eingeteilt werden. 
  Die Gruppennummer wird dann je Teilnehmer automatisch ermittelt und in die URI an den Platzhalter {group} eingetragen. 
  Dort wird die Einreichung erwartet und vom Praktomat heruntergeladen. 
  </p>

  <h4 id="Aufgabenbewertung">Aufgabenbewertung</h4>

  <p>
    Es wird unterschieden in die 'all-or-nothing'-Bewertung, bei der eine Einreichung entweder mit 0 oder mit voller Punktzahl (z.B. 1) bewertet wird und der gewichteten Summe. 
    Bei letzterer wird aus den Teiltests eine Punktzahl ermittelt, wobei jeder Teiltest mit einem Gewicht versehen ist. 
    Die Gewichte sind frei wählbar. Allerdings muss die Summe größer als 0 sein.
  
  </p>
Neben der Bewertung können auch die Titel und Beschreibungen der Tests geändert werden. 

  <h3 id="Test_anlegen">Anlegen eines Tests in Moodle</h3>
    <p>
      Zur Nutzung einer ProFormA-Frage muss ein <b>Test</b> in einem Kurs angelegt werden. Auch für diesen Test gibt es bei den Einstellungen einiges zu beachten.

    </p>
    <h4 id="Test_einstellen">Test-Einstellungen</h4>

    Besonderes Augenmerk muss auf das Frageverhalten und die Berichtsoptionen
    gelegt werden. Hier wird festgelegt, ob, wann und wie der Studierende eine Rückmeldung zu seiner Einreichung erhält.

    <p>
      Beim <b>Frageverhalten</b> ist zu beachten, dass dies beim ProFormA-Plugin intern immer
      auf die Mehrfachbeantwortung (mit oder ohne Abzüge) hinausläuft - unabhängig davon, was eingestellt wurde.
      Selbsteinschätzung und Hinweise werden nicht unterstützt.


    <ul>
      <li> Mehrfachbeantwortung (mit Abzügen):
        Der Studierende kann mehrere Versuche unternehmen, bevor er seine Lösung abgibt.
        Fehlversuche führen allerdings zu Punktabzug.
        Jeden Versuch kann er vom Grader prüfen lassen, indem er den Prüfen-Knopf drückt.
      <li> Mehrfachbeantwortung (ohne Abzüge):
        Der Studierende kann mehrere Versuche unternehmen, bevor er seine Lösung abgibt.
        Fehlversuche führen nicht zu Punktabzug.
        Jeden Versuch kann er vom Grader prüfen lassen, indem er den Prüfen-Knopf drückt.
      <li> Spätere Auswertung:
        Hier bekommt der Studierende keinen Prüfen-Knopf angezeigt.
    </ul>
    Standardeinstellung ist die 'Spätere Auswertung'. Diese Einstellung verhält sich
    'zur sicheren Seite', d.h. wenn man vergisst, hier Änderungen vorzunehmen,
    dann bekommt man zu wenig angezeigt. Wäre die Mehrfachbeantwortung der Standard,
    so würde ohne Änderung u.U. mehr angezeigt als man beabsichtigt, so dass diese
    Voreinstellung durchaus Sinn macht.

    </p>
    <p>
      Die 'Spätere Auswertung' ist bei Übungsaufgaben allerdings meistens nicht sinnvoll.
      Hier möchte man i.allg., dass der Studierende die Rückmeldung des Systems (das Spezifische Feedback) direkt nach
      einem Versuch (nach Drücken von 'Prüfen')
      angezeigt bekommt, was bei der 'späteren Auswertung' nicht möglich ist.
    </p>
    <p>

      In den <b>Berichtsoptionen</b> sollte sorgfältig ausgewählt werden, was der Studierende wann als Fedback erhält.
      Insbesondere sollte überlegt werden, ob der Studierende die 'Richtige Lösung' (Musterlösung)
      überhaupt zu Gesicht bekommen soll.
    </p>
    <p>
      <img src="berichtsoptionen.png" alt="Berichtsoptionen">
    </p>
    <p>

      Der folgende Screenshot verdeutlicht, welche Anzeigefelder mit den einzelnen Berichtsoptionen verbunden sind.
      (Die Rückmeldung des Graders und die Musterlösung sind ausklappbar.)



    </p>
    <p>
      <img src="feedback_kommentiert.png" alt="Bedeutung der Berichtsoptionen">
    </p>


    <h4 id="Aufgabe_nutzen">Einfügen der ProFormA-Aufgabe in den Test</h4>

    Wenn die Frage in der Fragensammlung vorliegt, kann sie in den Test eingefügt werden ("Testinhalt bearbeiten",
    danach "hinzufügen" und "aus der Fragensammlung" auswählen) und ist einsatzbereit.

    <!--<h3>Studierendensicht</h3>-->
</body>

</html>